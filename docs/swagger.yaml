basePath: /
definitions:
  api.CreateNewsRequest:
    properties:
      content:
        type: string
      title:
        type: string
    required:
    - content
    - title
    type: object
  api.ErrorResponse:
    properties:
      error:
        type: string
    type: object
  api.LoginRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.LoginResponse:
    properties:
      token:
        type: string
    type: object
  api.RegisterRequest:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  api.RegisterResponse:
    properties:
      user_id:
        type: string
    type: object
  models.News:
    properties:
      content:
        type: string
      created_at:
        type: string
      id:
        type: string
      title:
        type: string
      user_id:
        type: string
    type: object
host: localhost:8080
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is the API for the Radionica application.
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  termsOfService: http://swagger.io/terms/
  title: Radionica API
  version: "1.0"
paths:
  /login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and returns a JWT token
      parameters:
      - description: User login credentials
        in: body
        name: credentials
        required: true
        schema:
          $ref: '#/definitions/api.LoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: Login successful
          schema:
            $ref: '#/definitions/api.LoginResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Login a user
      tags:
      - auth
  /news:
    get:
      description: Retrieves a list of all news items
      produces:
      - application/json
      responses:
        "200":
          description: List of news
          schema:
            items:
              $ref: '#/definitions/models.News'
            type: array
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Get all news
      tags:
      - news
    post:
      consumes:
      - application/json
      description: Creates a new news item (requires authentication)
      parameters:
      - description: News details
        in: body
        name: news
        required: true
        schema:
          $ref: '#/definitions/api.CreateNewsRequest'
      produces:
      - application/json
      responses:
        "201":
          description: News created successfully
          schema:
            $ref: '#/definitions/models.News'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      security:
      - BearerAuth: []
      summary: Create a new news item
      tags:
      - news
  /register:
    post:
      consumes:
      - application/json
      description: Creates a new user with the provided username and password
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/api.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: User created successfully
          schema:
            $ref: '#/definitions/api.RegisterResponse'
        "400":
          description: Invalid request
          schema:
            $ref: '#/definitions/api.ErrorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/api.ErrorResponse'
      summary: Register a new user
      tags:
      - auth
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
